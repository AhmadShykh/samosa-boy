
{%- style -%}
    .section-{{ section.id }}-padding {
        padding-top: {{ section.settings.padding_top | times: 0.75 | round: 0 }}px;
        padding-bottom: {{ section.settings.padding_bottom | times: 0.75 | round: 0 }}px;
    }

    @media screen and (min-width: 750px) {
        .section-{{ section.id }}-padding {
            padding-top: {{ section.settings.padding_top }}px;
            padding-bottom: {{ section.settings.padding_bottom }}px;
        }
    }
{%- endstyle -%}

{% include 'data-typing-animation' %}


<div class="monsterrat">
    <div class ="section-{{ section.id }}-padding ">
        <div class="flex flex-col items-center">
            <div class=" w-full text-center	px-10 mb-12"  >
                <h1 data-typewriter="true" class="px-8 md:px-64 py-10 bg-red-600 text-white font-black text-4xl md:text-7xl">BUILD YOUR OWN BOX</h1>
            </div>
            {% comment %} <p class=" font-medium text-lg md:text-3xl">Order before midnight for next day dispatch</p> {% endcomment %}
            {% comment %} {% include 'custom-button', url: '/your-order-page-url', text: 'BUILD NOW', textSize:'6' %} {% endcomment %}
        </div>
        <div class="carousel-container">
          <div class="carousel-track">
              {% for product in collections.all.products limit: 6 %}
                <div class="carousel-item">
                  <div class="product-card custom-card">
                      <img class="product-image" style="aspect-ratio:0.8" src="{{ product.featured_image | img_url: '450x450' }}" alt="{{ product.title }}">
                      <div class="product-info monsterrat text-3xl">
                          <h1 class="font-black black uppercase">{{ product.title }}</h1>
                      </div>
                      <div class="button-container">
                          {% include 'custom-button', url: '/your-order-page-url', text: 'BUILD NOW' , textSize:'4' %}
                      </div>
                  </div>
                </div>

            {% endfor %}
          </div>
        </div>
    </div>

</div>

{% style  %}
.custom-grid {
  display: grid;
  grid-template-columns: repeat(1, 1fr); 
  gap: 40px;
  text-align: center; 
}

.product-card {
  border-radius: 8px;
  margin: 0 auto; 
}

.product-image {
  width: 100%;
  border-top-left-radius: 8px;
  border-top-right-radius: 8px;
}

.product-info {
  height: 10rem;
  padding: 16px;
}

.button-container {
}

@media (min-width: 640px) {
  .custom-grid {
    grid-template-columns: repeat(2, 1fr); 
  }
}

@media (min-width: 1200px) {
  .custom-grid {
    grid-template-columns: repeat(4, 1fr); 
  }
}
@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.custom-card {
  opacity: 0; /* Initially hidden */
  transform: translateY(20px);
  transition: opacity 0.5s ease-in-out, transform 0.5s ease-in-out;
}

.custom-card.visible {
  opacity: 1;
  transform: translateY(0);
  animation: fadeIn 0.5s ease-in-out;
}
{% endstyle %}

{% schema %}
{
  "name": "Build Your Own box",
  "tag": "section",
  "settings": [
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_top",
      "default": 36
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_bottom",
      "default": 36
    }
  ],
  "presets": [
    {
      "name": "Build Your Own box"
    }
  ]
}
{% endschema %}



<script>
document.addEventListener('DOMContentLoaded', function () {
    const cards = document.querySelectorAll('.custom-card');

    const observer = new IntersectionObserver(
        (entries) => {
            entries.forEach((entry) => {
                if (entry.isIntersecting) {
                    entry.target.classList.add('visible'); // Add the visible class to trigger animation
                    observer.unobserve(entry.target); // Stop observing once the card has animated
                }
            });
        },
        { threshold: 0.1 } // Trigger when 10% of the card is visible
    );

    cards.forEach((card) => observer.observe(card));
});
</script>
